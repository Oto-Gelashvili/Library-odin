/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

.material-symbols-outlined {
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

html {
  font-size: 62.5%;
  font-family: 'Outfit', sans-serif;
  font-optical-sizing: auto;
}
body {
  min-height: 100vh;
  background-color: #f5f5f5;
}
header {
  position: fixed;
  top: 0;
  height: 8rem;
  padding: 3.2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  background-color: #000;
  color: #fff;
  z-index: 10;
  /* we add z-index so form doesnt get voerlayed by grid content */
}
header h2 {
  font-size: 1.8rem;
}
header .addBtn {
  outline: none;
  border: 1px solid transparent;
  background-color: #fff;
  color: #000;
  font-size: 1.6rem;
  padding: 0.4rem;
  border-radius: 4px;
  cursor: pointer;
  transition: 0.4s;
}
header .addBtn:hover {
  border: 1px solid #fff;
  color: #fff;
  background-color: #000;
}
header .addBtn:active {
  border-color: #d50c0c;
  color: #d50c0c;
}
main {
  margin-top: 8rem;
  padding: 3.2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2.4rem;
}
main h1 {
  font-size: 2.4rem;
}
header .btnCont {
  position: relative;
}
header .btnCont form {
  display: none;
  position: absolute;
  right: 0;
  top: calc(100% + 1.2rem);
  background-color: #f5f5f5;
  border: 1px solid #ccc;
  color: #000;
  padding: 1.6rem;
  font-size: 1.6rem;

  gap: 8px;
}

header .btnCont form.active {
  display: flex;
  flex-direction: column;
}
header .btnCont form .readStateCont {
  display: flex;
  gap: 8px;
  align-items: center;
  justify-content: center;
}
.readStateCont .custom-checkbox {
  display: flex;
  align-items: center;
}

.readStateCont input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.readStateCont .checkmark {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  background-color: #e1e1e1;
  border-radius: 4px;
  margin-left: 8px;
  position: relative;
  transition: background-color 0.4s;
  cursor: pointer;
}

.readStateCont:hover .checkmark {
  background-color: #ccc;
}

.readStateCont input:checked + .checkmark {
  background-color: #000;
}

.readStateCont .checkmark::after {
  content: '';
  width: 6px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  display: none;
  margin-bottom: 2px;
}

.readStateCont input:checked + .checkmark::after {
  display: block;
}
header .btnCont form input {
  border-radius: 4px;
  border: 1px solid #ccc;
  padding: 2px;
  padding-left: 6px;
}

header .btnCont form button {
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 2px;
  background-color: #000;
  color: #fff;
  transition: 0.4s;
  cursor: pointer;
  font-size: 1.8rem;
}
header .btnCont form button:hover {
  background-color: #fff;
  border-color: #000;
  color: #000;
}
header .btnCont form button:active {
  background-color: #e1e1e1;
  border-color: #ccc;
  color: #000;
}
.formHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.material-symbols-outlined {
  cursor: pointer;
  transition: 0.4s;
  color: #d50c0c;
}
.material-symbols-outlined:hover {
  color: #000;
}
.material-symbols-outlined:active {
  color: #ccc;
}
.error-message {
  color: #d50c0c;
  font-size: 1.2rem;
  display: none;
  position: absolute;
  top: 100%;
}
.form-group {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
  position: relative;
}

.gridCont {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1.6rem;
}
.gridCont .bookCard {
  display: flex;
  flex-direction: column;
  background-color: #f5f5f5;
  border: 1px solid #ccc;
  color: #000;
  padding: 1.6rem;
  font-size: 1.6rem;
  gap: 8px;
  align-items: center;
  width: 260px;
}
.bookCardHeader {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.bookPages {
  align-self: end;
}

@media (max-width: 768px) {
  .gridCont {
    grid-template-columns: 1fr 1fr;
    width: 100%;
  }
  .gridCont .bookCard {
    width: 100%;
  }
}
@media (max-width: 575px) {
  .gridCont {
    grid-template-columns: 1fr;
  }
}
